{%- from "collectd/map.jinja" import collectd_settings with context %}

{%- set hfg = ping_settings.hosts_from_grains %}

{% if hfg and salt['mine.get'](hfg.target, hfg.fun, hfg.expr_form) -%}
{% set hosts = hosts + salt['mine.get'](hfg.target, hfg.fun, hfg.expr_form).values() -%}
{% endif -%}

LoadPlugin ping

<Plugin "ping">
{%- for host in hosts %}
  Host "{{ host }}"
{%- endfor %}

{%- if collectd_settings.plugins.df.Device is defined and collectd_settings.plugins.df.Device %}
  Interval "{{ collectd_settings.plugins.ping.interval }}"
{%- endif %}
{%- if collectd_settings.plugins.df.Device is defined and collectd_settings.plugins.df.Device %}
  Timeout "{{ collectd_settings.plugins.ping.timeout }}"
{%- endif %}
{%- if collectd_settings.plugins.df.Device is defined and collectd_settings.plugins.df.Device %}
  TTL "{{ collectd_settings.plugins.ping.ttl }}"
{%- endif %}
{%- if collectd_settings.plugins.df.Device is defined and collectd_settings.plugins.df.Device %}
  SourceAddress "{{ collectd_settings.plugins.ping.sourceaddress }}"
{%- endif %}
{%- if collectd_settings.plugins.df.Device is defined and collectd_settings.plugins.df.Device %}
  Device "{{ collectd_settings.plugins.ping.device }}"
{%- endif %}
{%- if collectd_settings.plugins.df.Device is defined and collectd_settings.plugins.df.Device %}
  MaxMissed "{{ collectd_settings.plugins.ping.maxmissed }}"
{%- endif %}
</Plugin>
